import time

# Инвентарь игрока
inventory = []

# Множество собранных предметов
collected_items = set()

# Словарь описаний предметов
items_info = {
    "карта": "Показывает путь к энергоблоку.",
    "ключ-карта": "Открывает шлюзовую дверь.",
    "энергокристалл": "Источник питания станции.",
    "мед-комплект": "Восстанавливает силы."
}

# Кортеж координат комнат
locations = ("лаборатория", "шлюзовая", "генераторная")

def print_pause(text, delay=0.5): # -> пауза в текстах
    print(text)
    time.sleep(delay)

def level_one():
    print("\n=== УРОВЕНЬ 1: ЛАБОРАТОРИЯ ===")
    print("Ты очнулся на Марсианской станции. За окном бушует песчаная буря.")
    print("Энергия падает, нужно восстановить питание генератора.")
    
    room_items = ["карта", "энергокристалл", "мед-комплект"]
    
    while True:
        print("\nВ комнате лежит:", ", ".join(room_items))
        action = input("Что сделать? (взять [предмет]/осмотреть/выйти): ").strip().lower()
        
        if action.startswith("взять"):
            item = action.split("взять")[-1].strip()
            if item in room_items:
                inventory.append(item)
                collected_items.add(item)
                room_items.remove(item)
                print_pause(f"Ты взял {item}.")
            else:
                print_pause("Такого предмета здесь нет.")
        
        elif action == "осмотреть":
            for item in inventory:
                print(f"{item}: {items_info.get(item, 'Нет описания.')}")
        
        elif action == "выйти":
            if "карта" in inventory and "энергокристалл" in inventory:
                print_pause("Ты покидаешь лабораторию и направляешься к шлюзу...")
                return True
            else:
                print_pause("Ты не можешь уйти без карты и энергокристалла!")
        else:
            print_pause("Неизвестная команда.")

def level_two():
    print("\n=== УРОВЕНЬ 2: ШЛЮЗОВАЯ ===")
    print("Ты у шлюзовой. Для выхода наружу нужна ключ-карта.")
    print("Рядом пульт управления, но он заперт паролем.")
    
    clues = {"код": "042", "подсказка": "Сложи цифры из надписи '4MARS2'."}
    
    while True:
        action = input("Что сделать? (осмотреть/ввести код/искать/инвентарь): ").strip().lower()
        
        if action == "осмотреть":
            print_pause("На стене надпись: '4MARS2'. Кажется, это подсказка.")
        
        elif action == "искать":
            print_pause("Ты осмотрел ящик под пультом и нашёл ключ-карту!")
            inventory.append("ключ-карта")
            collected_items.add("ключ-карта")
        
        elif action == "инвентарь":
            print(f"Инвентарь: {inventory}")
        
        elif action == "ввести код":
            user_code = input("Введи трёхзначный код: ")
            if user_code == clues["код"]:
                if "ключ-карта" in inventory:
                    print_pause("Панель щёлкнула, и шлюз открылся. Ты спасён!")
                    return True
                else:
                    print_pause("Код верный, но без ключ-карты шлюз не откроется.")
            else:
                print_pause("Неверный код!")
        else:
            print_pause("Команда не распознана.")

def level_three():
    print("\n=== УРОВЕНЬ 3: ПОДГОТОВКА КАПСУЛЫ ===")
    print("Перед шлюзом стоит спасательная капсула. Надо подготовить её рычаги.")
    print("Ты видишь три рычага: 'левый', 'средний', 'правый'.")
    print("Нужно привести их в правильную последовательность, чтобы капсула могла стартовать.")
    attempts = 0
    # правильные комбинации
    if "энергокристалл" in inventory:
        correct = ["средний", "левый", "правый"]
    else:
        correct = ["левый", "правый", "средний"]
    # игроку даём подсказку, если есть карта
    if "карта" in inventory:
        print_pause("Подсказка с карты: 'Начни с того, что даёт энергию.'")
    else:
        print_pause("Нет явной подсказки. Придётся подумать логически.")
    while attempts < 4:
        attempts += 1
        seq_input = input("Введи порядок через пробел (например: левый средний правый): ").strip().lower()
        seq = [s for s in seq_input.split() if s in ("левый", "средний", "правый")]
        if len(seq) != 3:
            print_pause("Неверный ввод. Укажи три рычага в порядке.")
            continue
        if seq == correct:
            print_pause("Ты установил рычаги в правильном порядке! Капсула готова к запуску.")
            # если есть мед-комплект, даём бонусное сообщение
            if "мед-комплект" in inventory:
                print_pause("Ты использовал(а) мед-комплект перед стартом — чувствуешь себя лучше.")
            return True
        else:
            # частичная проверка — сколько позиций совпало
            matches = sum(1 for i in range(3) if seq[i] == correct[i])
            if matches == 2:
                print_pause("Почти! Два рычага на месте, но один сбился. Попробуй ещё.")
            elif matches == 1:
                print_pause("Маловато — только один рычаг на месте.")
            else:
                print_pause("Комбинация неправильная. Система выдаёт предупреждение.")
            # если попыток много — ухудшение состояния игрока
            if attempts >= 3:
                print_pause("Система зафиксировала ошибки — требуется осторожность.")
    # если исчерпаны попытки
    print_pause("Ты не смог правильно настроить капсулу. Старт невозможен...")
    return False

def main():
    print("=== Добро пожаловать в игру 'Марсианская станция: побег из бури' ===")
    print("Твоя цель — выбраться со станции, пока буря не уничтожила купол.")
    
    if level_one():
        if level_two():
            print_pause("\nТы открыл(а) шлюзовую, но перед финальным выходом нужно подготовить капсулу.")
            ok3 = level_three()
            if ok3:
                print("\nПоздравляем! Ты успешно покинул станцию и выжил на Марсе!")
                print(f"Ты собрал {len(collected_items)} предмет(ов): {', '.join(collected_items)}")
            else:
                print("\nКапсула не готова — эвакуация сорвана. Ты остался на станции...")
        else:
            print("\nТы не смог покинуть станцию вовремя...")
    else:
        print("\nТы остался в лаборатории, и буря разрушила станцию.")

if __name__ == "__main__":
    main()